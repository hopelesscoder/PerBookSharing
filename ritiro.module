<?php

/**
 *
 * Implemento  hook_menu
 */

function ritiro_menu(){
	$items = array();

	$items ['ritiro'] = array(
	'title' => 'Ritiro',
	'description' => 'descrizione form',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('ritiro_form'),
	'access callback' => TRUE
	);
	
	return $items;	
}
// inizializzo il form
function ritiro_form($form, &$form_state){
	$select_stazione = _ritiro_get_vocabulary(3);

	$valore_stazione = isset($form_state['values']['stazione']) ? $form_state['values']['stazione'] : key($select_stazione);

	$form['stazione'] = array(
	'#type' => 'select',
	'#title' => 'Stazione',
	'#required' => TRUE,
	'#options' => $select_stazione,
	'#default_value' => $valore_stazione,
	// inserisco ajax necessario per la funzione che voglio svolgere
	'#ajax' => array(
		// quando si verifica 'event' drupal fa una richiesta ad ajax in background. 
		'event' => 'change',
		'callback' => 'ritiro_ajax_callback',
		'wrapper' => 'libro_replace',
		), //chiudo ajax

	); //chiudo array form stazione


	$form['libro'] = array(
	'#type' => 'select',
	'#title' => 'Libro',
	'#prefix' => '<div id="libro_replace">',
	'#suffix' => '<div>',
	'#options' => seconda_select_list($valore_stazione), //devo implementare tipo il get vocabulary di sopra
	'#default_value' => isset($form_state['values']['libro']) ? $form_state['values']['libro'] : '',
	); // array form libro

} // function ritiro_form

function ritiro_ajax_callback($form, &$form_state){
	return $form['libro'];
}

function _ritiro_get_vocabulary($vid){
	$terms = taxonomy_get_tree($vid);
	$output[0] = 'Tutte';
	foreach ($terms as $data){
	$output[$data->tid] = $data->name;
	}
	return $output;	
}

function seconda_select_list($valore_stazione){
	$term_stazione = taxonomy_get_term_by_name($valore_stazione);
	$tid_stazione = _taxonomy_get_tid_from_term($term_stazione);
//	$vid = $terms->vid;
//	 provo ad inserire una query
	$query = new EntityFieldQuery;
	$query-> entityCondition('entity_type', 'node')
	-> entityCondition('bundle', 'libro')
	-> fieldCondition('field_stazione', 'tid', $tid_stazione, 'CONTAINS')
	-> fieldCondition('field_numero', 'value', 0 , '>');
	$results = $query-> execute();

	if (isset ($results['node'])){
	$nids = array_keys($results['node']);
	$nodes = node_load_multiple($nids);
	}
	foreach ($nodes as $node){
	//$output_libro[$data-> tid] = $data -> name;
		  $titolofield = field_get_items('node',$node, 'field_titolo');
		  $titolotid = $titolofield[0]['tid'];
		  $titoloterm = taxonomy_term_load($titolotid);
		  $titolo = $titoloterm->name;
		  $output_libro[$titolotid] = $titolo;
	}//foreach

	return $output_libro;
	
}
function ritiro_form_validate($form, &$form_state){
}

function ritiro_form_submit($form, &$form_state){
        drupal_set_message(t('Form submitted'));
        $form_state['rebuild'] = TRUE;
}

function ritiro_permission(){
        return array(
                'access ritiro content' => array(
                'title' => t('Access content for the ritiro form'),
                )
                );
}
